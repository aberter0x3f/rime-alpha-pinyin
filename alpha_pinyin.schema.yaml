# Rime schema
# encoding: utf-8

schema:
  schema_id: alpha_pinyin
  name: α 阿尔法全拼
  version: "0.1"
  dependencies:
    - latex
    - pinyin_chaizi
  author:
    - aberter0x3f <aberter0x3f@disroot.org>
    - fkxxyz <https://www.fkxxyz.com>
  description: |
    基于 rime-cloverpinyin 修改的一款简化字全拼输入方案．

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中, 西 ]
  - name: zh_hant
    states: [ 简, 繁 ]
  - name: full_shape
    reset: 0
    states: [ 半, 全 ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - selector
    - punctuator
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@chaizi_lookup
    - affix_segmentor@latex_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - table_translator@chaizi_lookup
    - table_translator@latex_lookup
  filters:
    - lua_filter@*is_in_user_dict
    - simplifier
    - uniquifier
    - reverse_lookup_filter@chaizi_reverse_lookup
    - reverse_lookup_filter@latex_reverse_lookup

simplifier:
  option_name: zh_hant
  opencc_config: s2t.json

speller:
  alphabet: 'zyxwvutsrqponmlkjihgfedcba12345'
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  algebra:
    # 汉语拼音声调
    - xform/^r5$/er5/
    - derive/^([a-z]+)[1-5]$/$1/
    # - xlit 12345 !@#$%

    ### 超级简拼
    - erase/^hm$/ # 响应超级简拼，取消「噷 hm」的独占
    - erase/^m$/  # 响应超级简拼，取消「呣 m」的独占
    - erase/^n$/  # 响应超级简拼，取消「嗯 n」的独占
    - erase/^ng$/ # 响应超级简拼，取消「嗯 ng」的独占
    - abbrev/^([a-z]).+$/$1/   # 超级简拼
    - abbrev/^([zcs]h).+$/$1/  # 超级简拼中，zh ch sh 视为整体（ch'sh → 城市），而不是像这样分开（c'h's'h → 吃好睡好）。

    ### v u 转换，增加对词库中「nue/nve」「qu/qv」等不同注音的支持
    - derive/^([nl])ue$/$1ve/
    - derive/^([nl])ve$/$1ue/
    - derive/^([jqxy])u/$1v/
    - derive/^([jqxy])v/$1u/

    ### 自动纠错
    # 有些规则对全拼简拼混输有副作用：如「x'ai 喜爱」被纠错为「xia 下」
    # zh、ch、sh
    - derive/([zcs])h(a|e|i|u|ai|ei|an|en|ou|uo|ua|un|ui|uan|uai|uang|ang|eng|ong)$/h$1$2/  # hzi → zhi
    - derive/([zcs])h([aeiu])$/$1$2h/  # zih → zhi
    # ai
    - derive/^([wghk])ai$/$1ia/  # wia → wai
    # ia
    - derive/([qjx])ia$/$1ai/  # qai → qia
    # ei
    - derive/([wtfghkz])ei$/$1ie/
    # ie
    - derive/([jqx])ie$/$1ei/
    # ao
    - derive/([rtypsdghklzcbnm])ao$/$1oa/
    # ou
    - derive/([ypfm])ou$/$1uo/
    # uo（无）
    # an
    - derive/([wrtypsdfghklzcbnm])an$/$1na/
    # en
    - derive/([wrpsdfghklzcbnm])en$/$1ne/
    # ang
    - derive/([wrtypsdfghklzcbnm])ang$/$1nag/
    - derive/([wrtypsdfghklzcbnm])ang$/$1agn/
    # eng
    - derive/([wrtpsdfghklzcbnm])eng$/$1neg/
    - derive/([wrtpsdfghklzcbnm])eng$/$1egn/
    # ing
    - derive/([qtypdjlxbnm])ing$/$1nig/
    - derive/([qtypdjlxbnm])ing$/$1ign/
    # ong
    - derive/([rtysdghklzcn])ong$/$1nog/
    - derive/([rtysdghklzcn])ong$/$1ogn/
    # iao
    - derive/([qtpdjlxbnm])iao$/$1ioa/
    - derive/([qtpdjlxbnm])iao$/$1oia/
    # ui
    - derive/([rtsghkzc])ui$/$1iu/
    # iu
    - derive/([qjlxnm])iu$/$1ui/
    # ian
    - derive/([qtpdjlxbnm])ian$/$1ain/
    # - derive/([qtpdjlxbnm])ian$/$1ina/ # 和「李娜、蒂娜、缉拿」等常用词有冲突
    # in
    - derive/([qypjlxbnm])in$/$1ni/
    # iang
    - derive/([qjlxn])iang$/$1aing/
    - derive/([qjlxn])iang$/$1inag/
    # ua
    - derive/([g|k|h|zh|sh])ua$/$1au/
    # uai
    - derive/([g|h|k|zh|ch|sh])uai$/$1aui/
    - derive/([g|h|k|zh|ch|sh])uai$/$1uia/
    # uan
    - derive/([qrtysdghjklzxcn])uan$/$1aun/
    # - derive/([qrtysdghjklzxcn])uan$/$1una/ # 和「去哪、露娜」等常用词有冲突
    # un
    - derive/([qrtysdghjklzxc])un$/$1nu/
    # ue
    - derive/([nlyjqx])ue$/$1eu/
    # uang
    - derive/([g|h|k|zh|ch|sh])uang$/$1aung/
    - derive/([g|h|k|zh|ch|sh])uang$/$1uagn/
    - derive/([g|h|k|zh|ch|sh])uang$/$1unag/
    - derive/([g|h|k|zh|ch|sh])uang$/$1augn/
    # iong
    - derive/([jqx])iong$/$1inog/
    - derive/([jqx])iong$/$1oing/
    - derive/([jqx])iong$/$1iogn/
    - derive/([jqx])iong$/$1oign/
    # 其他
    - derive/([rtsdghkzc])o(u|ng)$/$1o/ # do → dou|dong
    - derive/ong$/on/ # lon → long
    - derive/([tl])eng$/$1en/ # ten → teng
    - derive/([qwrtypsdfghjklzxcbnm])([aeio])ng$/$1ng/ # lng → lang、leng、ling、long

translator:
  dictionary: &dict
    alpha_pinyin
  spelling_hints: 5  # x 字以内候选标注完整带调拼音
  preedit_format:
    - xform/([nljqxy])v/$1ü/
    # - xlit !@#$% 12345
    - xform ([aeiou])(ng?|r)([1-5]) $1$3$2
    - xform ([aeo])([iuo])([1-5]) $1$3$2
    - 'xform a1 ā'
    - 'xform a2 á'
    - 'xform a3 ǎ'
    - 'xform a4 à'
    - 'xform a5 å'
    - 'xform o1 ō'
    - 'xform o2 ó'
    - 'xform o3 ǒ'
    - 'xform o4 ò'
    - 'xform o5 o̊'
    - 'xform e1 ē'
    - 'xform e2 é'
    - 'xform e3 ě'
    - 'xform e4 è'
    - 'xform e5 e̊'
    - 'xform i1 ī'
    - 'xform i2 í'
    - 'xform i3 ǐ'
    - 'xform i4 ì'
    - 'xform i5 i̊'
    - 'xform u1 ū'
    - 'xform u2 ú'
    - 'xform u3 ǔ'
    - 'xform u4 ù'
    - 'xform u5 ů'
    - 'xform ü1 ǖ'
    - 'xform ü2 ǘ'
    - 'xform ü3 ǚ'
    - 'xform ü4 ǜ'
    - 'xform ü5 ü̊'
  comment_format: &pinyin_comment_format
    - xform/([nljqxy])v/$1ü/
    - xform ([aeiou])(ng?|r)([1-5]) $1$3$2
    - xform ([aeo])([iuo])([1-5]) $1$3$2
    - 'xform a1 ā'
    - 'xform a2 á'
    - 'xform a3 ǎ'
    - 'xform a4 à'
    - 'xform a5 å'
    - 'xform o1 ō'
    - 'xform o2 ó'
    - 'xform o3 ǒ'
    - 'xform o4 ò'
    - 'xform o5 o̊'
    - 'xform e1 ē'
    - 'xform e2 é'
    - 'xform e3 ě'
    - 'xform e4 è'
    - 'xform e5 e̊'
    - 'xform i1 ī'
    - 'xform i2 í'
    - 'xform i3 ǐ'
    - 'xform i4 ì'
    - 'xform i5 i̊'
    - 'xform u1 ū'
    - 'xform u2 ú'
    - 'xform u3 ǔ'
    - 'xform u4 ù'
    - 'xform u5 ů'
    - 'xform ü1 ǖ'
    - 'xform ü2 ǘ'
    - 'xform ü3 ǚ'
    - 'xform ü4 ǜ'
    - 'xform ü5 ü̊'
  # enable_correction: true
  enable_user_dict: false

chaizi_lookup:
  tag: chaizi_lookup
  prism: pinyin_chaizi
  dictionary: pinyin_chaizi
  enable_user_dict: false
  prefix: "u"
  suffix: "'"
  preedit_format: &pinyin
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/
  tips: 【拆字】
  closing_tips: 【全拼】
  enable_sentence: false
  enable_completion: true

chaizi_reverse_lookup:
  tags: [ chaizi_lookup ]
  overwrite_comment: true
  dictionary: *dict
  comment_format: *pinyin_comment_format

latex_lookup:
  tag: latex_lookup
  prism: latex
  dictionary: latex
  enable_user_dict: false
  # prefix: "\\"
  suffix: "'"
  tips: 【LaTeX】
  closing_tips: 【全拼】
  enable_sentence: false
  enable_completion: true

latex_reverse_lookup:
  tags: [ latex_lookup ]
  overwrite_comment: true
  dictionary: latex

punctuator:
  import_preset: default

key_binder:
  import_preset: default

recognizer:
  patterns:
    chaizi_lookup: "^u[a-z]*'?$"
    latex_lookup: "^\\\\.*'?$"

ascii_composer:
  import_preset: default

# __include: octagram # 启用语言模型
# octagram:
#   __patch:
#     "grammar/language": amz-v1n3m3-zh-hans
#     "grammar/collocation_max_length": 5
#     "grammar/collocation_min_length": 2
#     "translator/contextual_suggestions": true
#     "translator/max_homophones": 7
#     "translator/max_homographs": 7

# octagram:
#   __patch:
#     grammar:
#       language: wanxiang-lts-zh-hans
#       collocation_max_length: 8         #命中的最长词组
#       collocation_min_length: 2         #命中的最短词组，搭配词频健全的词库时候应当最小值设为3避开2字高频词
#       collocation_penalty: -10          #默认-12 对常见搭配词组施加的惩罚值。较高的负值会降低这些搭配被选中的概率，防止过于频繁地出现某些固定搭配。
#       non_collocation_penalty: -12      #默认-12 对非搭配词组施加的惩罚值。较高的负值会降低非搭配词组被选中的概率，避免不合逻辑或不常见的词组组合。
#       weak_collocation_penalty: -24     #默认-24 对弱搭配词组施加的惩罚值。保持默认值通常是为了有效过滤掉不太常见但仍然合理的词组组合。
#       rear_penalty: -30                 #默认-18 对词组中后续词语的位置施加的惩罚值。较高的负值会降低某些词语在句子后部出现的概率，防止句子结构不自然。
#     translator/contextual_suggestions: false
#     translator/max_homophones: 5
#     translator/max_homographs: 5
